name: Deploy & Test in KinD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install app dependencies
        run: |
          cd app
          pip install -r requirements.txt

      # 3️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t sample-app:latest app/

      # 4️⃣ Create KinD cluster
      - name: Setup KinD cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: ci-sample
          wait: 90s

      - name: Verify cluster
        run: kubectl get nodes

      # 5️⃣ Load Docker image into KinD
      - name: Load image into KinD
        run: kind load docker-image sample-app:latest --name ci-sample

      # 6️⃣ (Optional) Lint Helm chart
      - name: Lint Helm chart
        run: helm lint ./helm/sample-app

      # 7️⃣ Deploy using Helm
      - name: Deploy Helm chart
        run: |
          helm install sample-app ./helm/sample-app \
            --set image.repository=sample-app \
            --set image.tag=latest
          kubectl rollout status deployment/sample-app --timeout=120s
          kubectl get svc,pods

      # 8️⃣ Run regression tests
      - name: Run regression tests
        run: |
          kubectl port-forward svc/sample-app 30080:5000 &
          sleep 10
          pip install -r tests/requirements.txt
          pytest tests/ --junitxml=reports/results.xml

      # 9️⃣ Upload test reports
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: regression-results
          path: reports/
