name: CI with KinD and Helm

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3Ô∏è‚É£ Disable BuildKit (compatibility with KinD)
      - name: Disable BuildKit
        run: echo "DOCKER_BUILDKIT=0" >> $GITHUB_ENV

      # 4Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: docker build -t sample-app:latest app/

      # 5Ô∏è‚É£ Set up local registry for KinD
      - name: Start local registry
        run: |
          docker run -d -p 5000:5000 --name kind-registry registry:2 || true

      # 6Ô∏è‚É£ Create KinD cluster with registry
      - name: Create KinD cluster
        run: |
          cat <<EOF | kind create cluster --name ci-sample --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          containerdConfigPatches:
          - |-
            [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
              endpoint = ["http://kind-registry:5000"]
          EOF

      # 7Ô∏è‚É£ Tag and push Docker image to local registry
      - name: Push image to local registry
        run: |
          docker tag sample-app:latest localhost:5000/sample-app:latest
          docker push localhost:5000/sample-app:latest

      # 8Ô∏è‚É£ Verify image is in KinD
      - name: Verify image in KinD
        run: |
          kubectl run testpod --image=localhost:5000/sample-app:latest --restart=Never -- sleep 5
          kubectl delete pod testpod
          
      - name: Wait for cluster to be ready
        run: |
          kubectl wait --for=condition=Ready node --all --timeout=180s
          kubectl wait --for=condition=Ready pod --all --timeout=180s


      # 9Ô∏è‚É£ Lint Helm chart
      - name: Lint Helm chart
        run: helm lint ./helm/sample-app

      # üîü Deploy Helm chart using local registry image
      - name: Deploy Helm chart
        run: |
          helm install sample-app ./helm/sample-app \
            --set image.repository=localhost:5000/sample-app \
            --set image.tag=latest \
            --wait --timeout 10m
          kubectl get pods,svc

      # 1Ô∏è‚É£1Ô∏è‚É£ Wait for rollout, dump logs if fails
      - name: Wait for deployment
        run: |
          kubectl rollout status deployment/sample-app --timeout=300s || \
          (kubectl describe pods && kubectl logs -l app=sample-app)

      # 1Ô∏è‚É£2Ô∏è‚É£ Run regression tests
      - name: Run regression tests
        run: |
          kubectl port-forward svc/sample-app 30080:5000 &
          sleep 10
          pip install -r tests/requirements.txt
          pytest tests/ --junitxml=reports/results.xml

      # 1Ô∏è‚É£3Ô∏è‚É£ Upload test results
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: regression-results
          path: reports/

      # 1Ô∏è‚É£4Ô∏è‚É£ Cleanup cluster
      - name: Cleanup
        if: always()
        run: kind delete cluster
